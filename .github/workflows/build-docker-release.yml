name: Build release Docker images

on:
  push:
    tags:
      - "*"

jobs:
  publish_to_docker_hub:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Prepare tags
        id: prep
        run: |
          DOCKER_IMAGE=nielssp/uncomment
          VERSION=${GITHUB_REF#refs/tags/}
          SQLITE_TAGS="${DOCKER_IMAGE}:${VERSION}-sqlite,${DOCKER_IMAGE}:sqlite,${DOCKER_IMAGE}:latest"
          POSTGRES_TAGS="${DOCKER_IMAGE}:${VERSION}-postgres,${DOCKER_IMAGE}:postgres"
          echo ::set-output name=sqlite_tags::${SQLITE_TAGS}
          echo ::set-output name=postgres_tags::${POSTGRES_TAGS}

    # - name: Set up QEMU
    #   uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build and push SQLite image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
        # platforms: linux/amd64,linux/arm64,linux/arm/v7
          platforms: linux/amd64
          push: true
          tags: ${{ steps.prep.outputs.sqlite_tags }}

      - name: Build and push PostgreSQL image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          build-args: features=postgres
        # platforms: linux/amd64,linux/arm64,linux/arm/v7
          platforms: linux/amd64
          push: true
          tags: ${{ steps.prep.outputs.postgres_tags }}
